name: Build Axel for ImmortalWrt

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-axel:
    name: Build Axel Package
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform: [ "x86_64", "mediatek_filogic" ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
      if: matrix.platform == 'mediatek_filogic'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libncurses-dev \
          zlib1g-dev \
          gawk \
          git \
          gettext \
          libssl-dev \
          rsync \
          wget \
          unzip \
          zstd \
          python3 \
          jq \
          autoconf \
          automake \
          libtool \
          file
    
    - name: Set SDK URLs
      id: set-sdk
      run: |
        if [ "${{ matrix.platform }}" = "x86_64" ]; then
          echo "sdk_url=https://downloads.immortalwrt.org/releases/24.10.2/targets/x86/64/immortalwrt-sdk-24.10.2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst" >> $GITHUB_OUTPUT
        elif [ "${{ matrix.platform }}" = "mediatek_filogic" ]; then
          echo "sdk_url=https://downloads.immortalwrt.org/releases/24.10.2/targets/mediatek/filogic/immortalwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst" >> $GITHUB_OUTPUT
        fi
    
    - name: Download and extract SDK
      run: |
        mkdir -p sdk-${{ matrix.platform }}
        wget ${{ steps.set-sdk.outputs.sdk_url }} -O sdk.tar.zst
        tar -xaf sdk.tar.zst -C sdk-${{ matrix.platform }} --strip-components=1
        rm sdk.tar.zst
    
    - name: Prepare package directory
      run: |
        mkdir -p sdk-${{ matrix.platform }}/package/axel
        cp -R package/axel/Makefile sdk-${{ matrix.platform }}/package/axel/
        echo "src-link axel $(pwd)/package" >> sdk-${{ matrix.platform }}/feeds.conf
    
    - name: Set up SDK environment
      run: |
        cd sdk-${{ matrix.platform }}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
    
    - name: Clean cache before build
      run: |
        cd sdk-${{ matrix.platform }}
        make package/axel/clean
    
    - name: Build axel package
      run: |
        cd sdk-${{ matrix.platform }}
        make package/axel/compile V=s -j$(nproc)
        
        # 调试：列出可能的输出目录
        echo "Possible output directories:"
        find bin -type d -name "base" 2>/dev/null || true
    
    - name: Collect artifacts
      run: |
        mkdir -p artifacts
        
        # 更灵活的文件查找
        find sdk-${{ matrix.platform }} -name "axel_*.ipk" -exec cp {} artifacts/axel-${{ matrix.platform }}.ipk \;
        
        # 如果找不到，尝试其他常见路径
        if [ ! -f artifacts/axel-${{ matrix.platform }}.ipk ]; then
          echo "Trying alternative paths..."
          cp sdk-${{ matrix.platform }}/bin/packages/*/base/axel_*.ipk artifacts/axel-${{ matrix.platform }}.ipk || true
          cp sdk-${{ matrix.platform }}/bin/targets/*/*/packages/axel_*.ipk artifacts/axel-${{ matrix.platform }}.ipk || true
        fi
        
        # 验证文件存在
        if [ ! -f artifacts/axel-${{ matrix.platform }}.ipk ]; then
          echo "##[error]No IPK file found for ${{ matrix.platform }}"
          echo "##[group]Directory structure"
          find sdk-${{ matrix.platform }} -name "axel*" -o -name "*.ipk"
          echo "##[endgroup]"
          exit 1
        fi
        
        # 显示文件信息
        file artifacts/axel-${{ matrix.platform }}.ipk
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: axel-packages
        path: artifacts/axel-${{ matrix.platform }}.ipk
        retention-days: 7

  release:
    name: Create Release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: build-axel
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        name: axel-packages
        path: artifacts
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/axel-*.ipk
        tag_name: ${{ github.ref }}
        body: "Axel download accelerator built for ImmortalWrt"
        generate_release_notes: true
